// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiTenantSample.Infrastructure.Persistence;

namespace MultiTenantSample.DbMigration.Migrations
{
    [DbContext(typeof(MultiTenantSampleDbContext))]
    partial class MultiTenantSampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MultiTenantSample.Domain.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Female"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Male"
                        });
                });

            modelBuilder.Entity("MultiTenantSample.Domain.Entities.TenantPersonnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("PrefixId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("CONVERT(INT, SESSION_CONTEXT(N'TenantId'))");

                    b.HasKey("Id");

                    b.HasIndex("GenderId")
                        .IsUnique();

                    b.ToTable("TenantPersonnels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            DOB = new DateTime(1955, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Hazel",
                            GenderId = 1,
                            LastName = "Ramos",
                            MiddleName = "Peterson",
                            PrefixId = 1,
                            TenantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            DOB = new DateTime(1976, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dwight",
                            GenderId = 2,
                            LastName = "Nguyen",
                            PrefixId = 1,
                            TenantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            DOB = new DateTime(1969, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kyle",
                            GenderId = 3,
                            LastName = "Davis",
                            PrefixId = 1,
                            TenantId = 2
                        });
                });

            modelBuilder.Entity("MultiTenantSample.Domain.Entities.TenantPersonnel", b =>
                {
                    b.HasOne("MultiTenantSample.Domain.Entities.Gender", "GenderFk")
                        .WithOne()
                        .HasForeignKey("MultiTenantSample.Domain.Entities.TenantPersonnel", "GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
